#!/bin/sh -eu

. shell-error
. shell-args

PROJECT=bootloader

MIBOOT_DIR="/lib/$PROJECT"
KERNEL_DIR="$MIBOOT_DIR"

show_help()
{
	cat <<-EOF
	Usage: $PROG [options]

	Options:
	  -b, --bootdir=DIR   specifies boot directory (default: /boot);
	  -q, --quiet         try to be more quiet;
	  -v, --verbose       print a message for each action;
	  -V, --version       print program version and exit;
	  -h, --help          show this text and exit.

	Report bugs to authors.

	EOF
	exit
}

print_version()
{
	cat <<-EOF
	$PROG version @VERSION@
	Written by Alexey Gladkov.

	Copyright (C) 2020  Alexey Gladkov <gladkov.alexey@gmail.com>
	This is free software; see the source for copying conditions.  There is NO
	warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
	EOF
	exit
}

bootloader_build_image()
{
	verbose "Building bootloader runtime image"

	export KERNEL="$(cat "$KERNEL_DIR/boot/version")"
	export KERNEL_CONFIG="$KERNEL_DIR/boot/config-$KERNEL"
	export KERNEL_MODULES_DIR="/lib/modules/$KERNEL"

	make-initrd -k "$KERNEL" -b "$KERNEL_DIR/boot" -c "/etc/$PROJECT.mk"
}

bootloader_copy()
{
	! cmp -s -- "$@" ||
		return 0
	cp $verbose -f -- "$@"
}

setup_grub()
{
	grub-install --efi-directory "$bootdir/efi" --boot-directory "$bootdir"
	if [ "$(realpath "$bootdir")" != "/boot" ]; then
		mount --bind "$bootdir" /boot
		mount --bind "$bootdir/efi" /boot/efi
	fi
	update-grub
	if [ "$(realpath "$bootdir")" != "/boot" ]; then
		umount /boot/efi
		umount /boot
	fi
}

TEMP=`getopt -n "$PROG" -o "b:,$getopt_common_opts" -l "boot:,$getopt_common_longopts" -- "$@"` ||
	show_usage
eval set -- "$TEMP"

bootdir=/boot

while :; do
	case "$1" in
		-b|--boot-dir)
			bootdir="$(opt_check_dir "$1" "$2")"
			;;
		-h|--help) show_help
			;;
		-q|--quiet) quiet=-q; verbose=
			;;
		-v|--verbose) verbose=-v; quiet=
			;;
		-V|--version) print_version "$PROG"
			;;
		--) shift; break
			;;
	esac
	shift
done

bootloader_build_image

KERNEL="$(cat "$KERNEL_DIR/boot/version")"
bootloader_copy "$KERNEL_DIR/boot/vmlinuz" "$bootdir/vmlinuz-$KERNEL"
bootloader_copy "$KERNEL_DIR/boot/initrd.img" "$bootdir/initrd.img-$KERNEL"

setup_grub
